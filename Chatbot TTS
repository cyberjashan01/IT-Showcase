# http://127.0.0.1:5000 
from flask import Flask, request, jsonify, render_template_string
from flask_cors import CORS
import pyttsx3
import os

app = Flask(__name__)
CORS(app)

# Initialize TTS engine
engine = pyttsx3.init()

# HTML for the interface
HTML_TEMPLATE = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot with TTS</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f9;
        }
        .chat-container {
            width: 400px;
            padding: 20px;
            background: #fff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
        }
        .chat-log {
            height: 300px;
            overflow-y: auto;
            border: 1px solid #ddd;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
        }
        .chat-log p {
            margin: 5px 0;
        }
        .user {
            text-align: right;
            color: blue;
        }
        .bot {
            text-align: left;
            color: green;
        }
        .chat-input {
            display: flex;
        }
        .chat-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
        }
        .chat-input button {
            padding: 10px 20px;
            border: none;
            background-color: #007BFF;
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-log" id="chat-log"></div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Type your message..." />
            <button onclick="sendMessage()">Send</button>
        </div>
    </div>
    <script>
        function sendMessage() {
            const userInput = document.getElementById("user-input").value;
            if (!userInput) return;
            
            // Display user's message
            const chatLog = document.getElementById("chat-log");
            const userMessage = document.createElement("p");
            userMessage.className = "user";
            userMessage.textContent = userInput;
            chatLog.appendChild(userMessage);
            document.getElementById("user-input").value = "";

            // Send message to server
            fetch('/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ message: userInput })
            })
            .then(response => response.json())
            .then(data => {
                // Display bot's response
                const botMessage = document.createElement("p");
                botMessage.className = "bot";
                botMessage.textContent = data.response;
                chatLog.appendChild(botMessage);

                // Play audio response
                const audio = new Audio(data.audio);
                audio.play();

                chatLog.scrollTop = chatLog.scrollHeight;
            });
        }
    </script>
</body>
</html>
"""

# Function to convert text to speech
def text_to_speech(text):
    output_file = 'static/response.mp3'
    engine.save_to_file(text, output_file)
    engine.runAndWait()
    return f'/{output_file}'

# Rule-based chatbot logic
def chatbot_response(user_input):
    user_input = user_input.lower()
    if "hello" in user_input or "hi" in user_input:
        return "Hello! How can I assist you today?"
    elif "how are you" in user_input:
        return "I'm just a bot, but I'm functioning perfectly! How about you?"
    elif "your name" in user_input:
        return "I'm your friendly chatbot with TTS!"
    elif "bye" in user_input or "goodbye" in user_input:
        return "Goodbye! Have a wonderful day!"
    elif "weather" in user_input:
        return "I'm not sure, but you can check the latest weather updates online."
    elif "time" in user_input:
        from datetime import datetime
        return f"The current time is {datetime.now().strftime('%I:%M %p')}."
    else:
        return "I'm not sure how to respond to that. Could you try asking something else?"

@app.route('/')
def index():
    return render_template_string(HTML_TEMPLATE)

@app.route('/chat', methods=['POST'])
def chat():
    user_input = request.json.get('message', '')
    if not user_input:
        return jsonify({'response': 'Please provide a message.'})

    # Generate chatbot response
    response = chatbot_response(user_input)

    # Generate TTS audio file
    audio_path = text_to_speech(response)

    return jsonify({'response': response, 'audio': audio_path})

if __name__ == '__main__':
    # Ensure the 'static' directory exists
    os.makedirs('static', exist_ok=True)
    app.run(debug=True)
